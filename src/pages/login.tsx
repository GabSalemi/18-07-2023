import { useContext } from 'react'
import { useReducer } from 'react'
import { useState } from 'react'
import { loginReducer, todoReducer } from '@/state/reducer'
import { MainContext } from '@/state/global'
import { initialState } from '@/state/global'
import Router from 'next/router'
import Head from 'next/head'
import Navbar from '@/components/navbar'
import { signInWithPopup } from "firebase/auth";
import { auth, provider } from "@/plugins/firebase";

import styles from "../styles/login.module.scss"

export default function Login() {
  const {state, dispatch} = useContext(MainContext)
  const [email, setEmail] = useState("")
  const [isLogged, setIsLogged] = useState(false)

  const googleAuth= async (e: any) => {
    e.preventDefault()
        const res = await signInWithPopup(auth, provider);
        dispatch({ type: "LOGIN", payload: res.user.email });
        setEmail(res.user.email as string)
        Router.push("/")
    };

  const onHandleChange = (e: any) => {
      setEmail(e.target.value)
  }

  const onHandleSubmit = (e : any) => {
      e.preventDefault()
      if (email !== "") {
        setIsLogged(true)
        Router.push("/")
        dispatch({type: "LOGIN", payload: email})
      } else {Router.push("/login")}}

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <MainContext.Provider value={{state, dispatch}}>
        <main >
          <Navbar username={email} isLogged={isLogged}/>
          <h1 className={styles.login__title}>LoginPage</h1>
          <form className={styles.login__form}>
                <input type="text" onChange={(e: any) => onHandleChange(e)}/>
                <input type="submit" onClick={(e : any) => onHandleSubmit(e)}/>
                <button onClick={(e: any) => googleAuth(e)}>Accedi con Google</button>
          </form>

          
        </main>  
      </MainContext.Provider>
       
    </>
  )
}
